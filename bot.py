#!/usr/bin/env python3

# Author        : myth-dev
# GitHub        : https://github.com/mython-dev
# Instagram     : @thehackerworld && @mython_dev
# Telegram      : @myth_dev
# Date          : Saturday, March 18, 2023
# Main Language : Python


# –≠—Ç–æ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –≤–∞—à–∏–º —Å–µ—Ä–≤–µ—Ä–æ–º —á–µ—Ä–µ–∑ Telegram.

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –º–æ–¥—É–ª–∏ 

# –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã
from commands import backup, date, df, install, logs, remove, restart, shutdown, processes, network, status

 # –∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º  —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
from config import TELEGRAM_ID, BOT_TOKEN

import os # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π
import subprocess # –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –≤–Ω–µ—à–Ω–∏—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
import sys # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π.

try:
    import asyncio # –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
    import psutil # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ –∏ —Å–∏—Å—Ç–µ–º–Ω—ã–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
    import speedtest # –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    import docker # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ Docker
    import aiogram # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
    from aiogram import Bot, types, executor, Dispatcher # –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Telegram API
    from aiogram.types import *
except ImportError:
    print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: pip3 install requirements.txt')
    sys.exit()


try:
    os.seteuid(0) # –ü–æ–ø—ã—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ 0 (root)
except PermissionError: # –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞–µ—Ç –æ—à–∏–±–∫–∞ PermissionError, –≤—ã–≤–æ–¥–∏—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ç–æ–º, —á—Ç–æ –Ω—É–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–∫—Ä–∏–ø—Ç —Å –ø—Ä–∞–≤–∞–º–∏ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —á–µ—Ä–µ–∑: sudo bash run.sh\n")
    sys.exit() # –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã.

# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN)
# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):

    # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /start –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.

    await bot.send_message(chat_id=TELEGRAM_ID, text='–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–∞–º–∏ Ubuntu/Debian. –í–≤–µ–¥–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, —á—Ç–æ —è –º–æ–≥—É.')


@dp.message_handler(commands=['help'])
async def help_command(message:types.Message):

    # –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—É /help –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.


    help_text = """–Ø –º–æ–≥—É –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:\n
/status - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞. üìä
/date - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞. ‚è≥
/df - –ø–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∏—Å–∫–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ. üíΩ
/restart - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–µ—Ä–≤–µ—Ä. üòá
/shutdown - –≤—ã–∫–ª—é—á–∏—Ç—å —Å–µ—Ä–≤–µ—Ä. üò¥
/install - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –ø–∞–∫–µ—Ç, c –ø–æ–º–æ—â—å—é –ø–∞–∫–µ—Ç–Ω–æ–≥–æ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ APT. ‚úÖ
/remove - —É–¥–∞–ª–∏—Ç—å –ø–∞–∫–µ—Ç. ‚ùå
/processes - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤. üßê
/backup - —Å–¥–µ–ª–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–∞ –∏–ª–∏ –∫–∞—Ç–∞–ª–æ–≥–∞. üìÇ
/logs - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω—É–∂–Ω—ã–µ –ª–æ–≥–∏ –≤ /var/log/. üìù
/network - —Å–µ—Ç–µ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏. üåê
"""

    await bot.send_message(chat_id=TELEGRAM_ID, text=help_text)


@dp.message_handler(commands=["date"])
async def date_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "date"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é date_command –∏–∑ –º–æ–¥—É–ª—è date –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ç–µ–∫—É—â–µ–π –¥–∞—Ç–æ–π –∏ –≤—Ä–µ–º–µ–Ω–µ–º.
    await date.date_command(message)

@dp.message_handler(commands=["df"])
async def df_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "df"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é df_command –∏–∑ –º–æ–¥—É–ª—è df –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –¥–∏—Å–∫–æ–≤–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ.
    await df.df_command(message)

@dp.message_handler(commands=["restart"])
async def restart_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "restart"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é restart_command –∏–∑ –º–æ–¥—É–ª—è restart –¥–ª—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã.
    await restart.restart_command(message)

@dp.message_handler(commands=["shutdown"])
async def shutdown_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "shutdown"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é shutdown_command –∏–∑ –º–æ–¥—É–ª—è shutdown –¥–ª—è –≤—ã–∫–ª—é—á–µ–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã.
    await shutdown.shutdown_command(message)

@dp.message_handler(commands=["install"])
async def install_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "install"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é install_command –∏–∑ –º–æ–¥—É–ª—è install –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞.
    await install.install_command(message)

@dp.message_handler(commands=["remove"])
async def remove_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "remove"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é remove_command –∏–∑ –º–æ–¥—É–ª—è remove –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –ø–∞–∫–µ—Ç–∞.
    await remove.remove_command(message)

@dp.message_handler(commands=["logs"])
async def logs_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "logs"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é send_logs –∏–∑ –º–æ–¥—É–ª—è logs –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤ —Å–∏—Å—Ç–µ–º—ã.
    await logs.send_logs(message)

@dp.message_handler(commands='backup')
async def backup_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "backup"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é backup_command –∏–∑ –º–æ–¥—É–ª—è backup –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Å–∏—Å—Ç–µ–º—ã.
    await backup.backup_command(message)


@dp.message_handler(commands=['processes'])
async def send_processes(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "processes"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é command_processes –∏–∑ –º–æ–¥—É–ª—è processes –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ.
    await processes.command_processes(message)

@dp.message_handler(commands=['network'])
async def network_command_handler(message: types.Message):
    # –ö–æ–º–∞–Ω–¥–∞ "network"
    # –≤—ã–∑—ã–≤–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é command_network –∏–∑ –º–æ–¥—É–ª—è network –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ç–µ–≤—ã—Ö –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞—Ö.
    await network.command_network(message)


@dp.message_handler(commands=["status"])
async def status_handler(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–∂–∏–¥–∞–Ω–∏–∏
    await message.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–æ–∂–¥–∏—Ç–µ...')
    await status.send_status()    

async def monitoring_server():
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è CPU
    cpu_usage = psutil.cpu_percent()
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –ø–∞–º—è—Ç–∏
    ram_usage = psutil.virtual_memory().percent
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ—Ü–µ–Ω—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∏—Å–∫–∞
    disk_usage = psutil.disk_usage('/').percent
    # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç speedtest –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞
    st = speedtest.Speedtest()
    # –ü–æ–ª—É—á–∞–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –∑–∞–≥—Ä—É–∑–∫–∏, –æ—Ç–¥–∞—á–∏ –∏ –ø–∏–Ω–≥
    download_speed, upload_speed, ping = st.download() / 1000000, st.upload() / 1000000, st.results.ping

    if cpu_usage > 90:
        await bot.send_message(chat_id=TELEGRAM_ID, text=f'üíª –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ CPU: <b>{cpu_usage}%</b>, –û—Å—Ç–∞–ª–æ—Å—å <b>10%</b> !!!', parse_mode=ParseMode.HTML)

    if ram_usage > 90:
        await bot.send_message(chat_id=TELEGRAM_ID, text=f"üß† –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ RAM: <b>{ram_usage}%</b>, –û—Å—Ç–∞–ª–æ—Å—å <b>10%</b> !!!", parse_mode=ParseMode.HTML)
    
    if disk_usage > 90:
        await bot.send_message(chat_id=TELEGRAM_ID, text=f"üíΩ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–∏—Å–∫–∞: <b>{disk_usage}%</b>, –û—Å—Ç–∞–ª–æ—Å—å <b>10%</b> !!!", parse_mode=ParseMode.HTML)


async def scheduled_monitoring_server(wait_for):
    while True:
        # –ñ–¥–µ–º —É–∫–∞–∑–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
        await asyncio.sleep(wait_for)
        # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞
        await monitoring_server()

# –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Å–∫—Ä–∏–ø—Ç
if __name__ == '__main__':
    loop = asyncio.get_event_loop() 
    loop.create_task(status.scheduled(720)) # –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É status.scheduled –∫–∞–∂–¥—ã–µ 720 –º–∏–Ω—É—Ç (12 —á–∞—Å–æ–≤)
    loop.create_task(scheduled_monitoring_server(300))  # –∑–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É scheduled_monitoring_server–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç.
    executor.start_polling(dp, skip_updates=True)